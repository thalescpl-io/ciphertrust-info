name: Build and Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            pyinstaller_options: "--onefile -n cminfo-linux ./cminfo.py"
            asset_path: /home/runner/work/ciphertrust-info/ciphertrust-info/dist/cminfo-linux
            asset_name: cminfo-linux
          - os: windows-latest
            platform: windows
            pyinstaller_options: "--onefile -n cminfo-windows ./cminfo.py"
            asset_path: D:\a\ciphertrust-info\ciphertrust-info\dist\cminfo-windows.exe
            asset_name: cminfo-windows.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.13

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run PyInstaller
        run: |
          pip install pyinstaller
          pyinstaller ${{ matrix.pyinstaller_options }}

      - name: Create Release
        if: ${{ matrix.os == 'ubuntu-latest' }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Release for version ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Add Asset to Existing Release
        if: ${{ matrix.os == 'ubuntu-latest' && steps.create_release.outputs.upload_url == '' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ matrix.asset_path }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/octet-stream

      # - name: Add Linux Asset to Existing Release
      #   if: ${{ matrix.os == 'ubuntu-latest' && steps.create_release.outputs.upload_url == '' }}
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ${{ matrix.asset_path }}
      #     asset_name: ${{ matrix.asset_name }}
      #     asset_content_type: application/octet-stream

      # - name: Add Windows Asset to Existing Release
      #   if: ${{ matrix.os == 'windows-latest' && steps.create_release.outputs.upload_url == '' }}
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ github.event.release.upload_url }}
      #     asset_path: ${{ matrix.asset_path }}
      #     asset_name: ${{ matrix.asset_name }}
      #     asset_content_type: application/octet-stream
