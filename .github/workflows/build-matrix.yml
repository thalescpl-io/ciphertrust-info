name: Build CMINFO and Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout code
        id: checkout_code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # This is important to fetch all history for all tags

      # Set filename and path for Linux
      - name: Set filename and path for Linux
        if: runner.os == 'Linux'
        run: |
          echo "FILENAME=cminfo-linux" >> $GITHUB_ENV
          echo "FILEPATH=/home/runner/work/ciphertrust-info/ciphertrust-info/dist/cminfo-linux" >> $GITHUB_ENV

        # Set filename and path for Windows
      - name: Set filename and path for Windows
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          "echo FILENAME=cminfo-windows" | Out-File -FilePath $env:GITHUB_ENV -Append
          "echo FILEPATH=./dist/cminfo-windows" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Test Environment
        id: test_env
        run: |
          echo ${{ env.FILENAME }}
          pwd

      # - name: Set up Python 3.13
      #   id: setup_python
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: 3.13

      # - name: Install dependencies
      #   id: install_dependencies
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install -r requirements.txt

      # - name: Run PyInstaller
      #   id: run_pyinstaller
      #   run: |
      #     pip install pyinstaller
      #     pyinstaller --onefile -n ${{ env.FILENAME }} ./cminfo.py
      # env:
      #   FILENAME: ${{ env.FILENAME }}

      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     body: |
      #       Release for version ${{ github.ref }}
      #     draft: false
      #     prerelease: false

      # - name: Upload Release Asset
      #   id: upload_release_asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     FILENAME: ${{ matrix.os == 'ubuntu-latest' && 'cminfo-linux' || 'cminfo-windows' }}
      #     FILEPATH: ${{ matrix.os == 'ubuntu-latest' && '/home/runner/work/ciphertrust-info/ciphertrust-info/dist/cminfo-linux' || './dist/cminfo-windows' }}

      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: $FILEPATH
      #     asset_name: $FILENAME
      #     asset_content_type: application/octet-stream
